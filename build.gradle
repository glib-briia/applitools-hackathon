plugins {
    id 'java'
}

group 'com.aplifashion'
version '1.0'
description "Applitools UFG Hackathon"

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile "org.testng:testng:6.14.3"
    testCompile 'org.assertj:assertj-core:3.16.1'
    compile "com.applitools:eyes-selenium-java3:3.165.0"
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'
    compile group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '3.8.1'
}

task traditionalTests(type: Test, dependsOn: cleanTest) {
    description "Runs Traditional Selenium test suite against AppliFashion app version." +
            " Ex: gradlew clean traditionalTests -PAPP_VERSION=V1; or for running single task: gradlew clean traditionalTests -PAPP_VERSION=V1 -Ptask=1"
    dependsOn testClasses
    def envVars = ["APP_VERSION": project.hasProperty("APP_VERSION") ? project.APP_VERSION: "V1", "APPLITOOLS_API_KEY": System.getProperty("APPLITOOLS_API_KEY")]
    environment envVars
    useTestNG() {
        suites "src/test/resources/TraditionalTests${environment.APP_VERSION}.xml"
        if(project.hasProperty("task")) {
            filter {
                includeTestsMatching "*Task${project.task}*"
            }
        }
    }
}

task modernTests(type: Test, dependsOn: cleanTest) {
    description "Runs Modern Applitools test suite against AppliFashion app version." +
            " Ex: gradlew clean modernTests -PAPP_VERSION=V1; or for running single task: gradlew clean modernTests -PAPP_VERSION=V1 -Ptask=1"
    def envVars = ["APP_VERSION": project.hasProperty("APP_VERSION") ? project.APP_VERSION: "V1", "APPLITOOLS_API_KEY": System.getenv("APPLITOOLS_API_KEY")]
    environment envVars
    useTestNG() {
        suites "src/test/resources/ModernTests${environment.APP_VERSION}.xml"
        if(project.hasProperty("task")) {
            filter {
                includeTestsMatching "*Task${project.task}*"
            }
        }
    }
}

